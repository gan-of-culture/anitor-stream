#!/bin/sh

query="$*"

new_line="
"

curl_headers="-H 'user-agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.77 Safari/537.36'"

query_categories=(
	"English-Translated"
	"Non-English-Translated"
	"Gordan Ramsey Special: Fucking RAW"
	"Exit"
)

NORMAL=$(tput sgr0)
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)

die () {
	printf '%s\n' "$*" >&2
	exit 1;
}

remove_xml_tag() {
	echo "$*" | awk -v RS='<[^>]+>' -v ORS= '1' 
}


PS3="Enter a number (1-${#query_categories[@]}): "

category=""

select option in "${query_categories[@]}"; do
break;
done

if [ $REPLY == 4 ]
then
	exit
fi
i
clear
category="1_$(( $REPLY+1 ))"

##########################
# PREPARING SEARCH QUERY #
##########################
# prepend + before each word, and remove the first words +
# to get a + separated query
query_string=
for word in $query; do
	query_string=${query_string}+${word}
done
query_url="https://nyaa.si/?page=rss&q=$query_string&c=$category&f=0"
echo $query_url


#########################
# Getting nyaa.si items #
#########################
html=$(curl -s $curl_headers $query_url | awk "/item/,/\/item/" )


################################
# Parsing and displaying items #
################################
echo "Results found for $query in ${query_categories[$((REPLY-1))]}: "
echo ""
item_url_list=()
item_count=0
title=
seeders=
downloads=
size=
trusted=
remake=
color=$NORMAL
while IFS= read line; do
	case $line in
		*"<title>"*)
			item_count=$((item_count+1))
			title=$(remove_xml_tag $line) 
			;;
		*"<link>"*)
			link=$(remove_xml_tag $line)
			item_url_list+=(${link})
			;;
		*"<nyaa:seeders>"*)
			seeders=$(remove_xml_tag $line) 
			;;
		#*"<nyaa:downloads>"*)
		#	downloads=$(remove_xml_tag $line)
		#	;;
		*"<nyaa:size>"*)
			size=$(remove_xml_tag $line)
			;;
		*"<nyaa:trusted>"*)
			trusted=$(remove_xml_tag $line)
			;;
		*"<nyaa:remake>"*)
			remake=$(remove_xml_tag $line)
			;;
		*"</item>"*)
			color=$NORMAL
			if [ $trusted == "Yes" ] && [ $remake == "No" ]
			then
				color=$GREEN
			elif [ $trusted == "No" ] && [ $remake == "Yes" ]
			then
				color=$RED
			fi
			printf "${color}[%d] %s - Size %s - Seeders %s \n" "${item_count}" "${title}" "${size}" "${seeders}"
			;;
	esac
done<<!
$html
!
[ $item_count == 0 ] && die "no search results"

echo "${NORMAL}"
#item_url_list=${item_url_list#$new_line}

##############################
# Choosing torrent to stream #
##############################
echo "Enter a number (1-${#item_url_list[@]}): "
read torrent_id

count=0
for url in ${item_url_list[@]}; do
	count=$((count+1))
	if [ $count == $torrent_id ]; then
		selected_item_url=$url
	fi
done
[ -z "$selected_item_url" ] && die "invalid choice"

echo $selected_item_url

webtorrent --mpv "${selected_item_url}"
